use crate::webgl::shader_program::ShaderProgram;

pub fn print_text(program: &mut ShaderProgram, text: String, x: f32, y: f32) {
  for (index, character) in text.chars().enumerate() {
    let sprite_key = match character {
      '0' => "0",
      '1' => "1",
      '2' => "2",
      '3' => "3",
      '4' => "4",
      '5' => "5",
      '6' => "6",
      '7' => "7",
      '8' => "8",
      '9' => "9",
      'a' => "a",
      'A' => "a_capital",
      'b' => "b",
      'B' => "b_capital",
      'c' => "c",
      'C' => "c_capital",
      'd' => "d",
      'D' => "d_capital",
      'e' => "e",
      'E' => "e_capital",
      'f' => "f",
      'F' => "f_capital",
      'g' => "g",
      'G' => "g_capital",
      'h' => "h",
      'H' => "h_capital",
      'i' => "i",
      'I' => "i_capital",
      'j' => "j",
      'J' => "j_capital",
      'k' => "k",
      'K' => "k_capital",
      'l' => "l",
      'L' => "l_capital",
      'm' => "m",
      'M' => "m_capital",
      'n' => "n",
      'N' => "n_capital",
      'o' => "o",
      'O' => "o_capital",
      'p' => "p",
      'P' => "p_capital",
      'q' => "q",
      'Q' => "q_capital",
      'r' => "r",
      'R' => "r_capital",
      's' => "s",
      'S' => "s_capital",
      't' => "t",
      'T' => "t_capital",
      'u' => "u",
      'U' => "u_capital",
      'v' => "v",
      'V' => "v_capital",
      'w' => "w",
      'W' => "w_capital",
      'x' => "x",
      'X' => "x_capital",
      'y' => "y",
      'Y' => "y_capital",
      'z' => "z",
      'Z' => "z_capital",
      '&' => "ampersand",
      '\'' => "apostrophe",
      ')' => "bracket_closed",
      '(' => "bracket_open",
      ':' => "colon",
      ',' => "comma",
      '-' => "dash",
      '$' => "dollar",
      '.' => "dot",
      '=' => "equals",
      '!' => "exclamation",
      '#' => "hash",
      '%' => "percent",
      '+' => "plus",
      '?' => "question_mark",
      '"' => "quote",
      '/' => "slash",
      '*' => "star",
      _ => "spacebar"
    };
    program.draw(format!("fonts/text/{}", sprite_key), x + index as f32 * 20., y, 20., 20., 1.);
  }
}